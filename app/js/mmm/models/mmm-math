var Backbone = require('backbone');
var $ = require('jquery');
Backbone.$ = $;

var calcMMM = Backbone.Model.extend({
  defaults: {
    numbers:'' //save array here as an attribute of this model?
  },

  process: function(nums) {
    console.log("processing your input");
    //*** PRE PROCESSING LOOP ***
    for (i = 0; i < nums.length; i ++) {
      num = nums[i];

      //mean and median pre-processing (build a sum and a sorted array for later use)
      sum += Number(num);
      sortArgs.push(num);
      //mode processing - use an object to track occurrences of each unique number and keep track of which one occurs most frequently
      if (modeMap[num] == null) {
        modeMap[num] = 1;
      } else {
        modeMap[num]++;
        if (modeMap[num] > numOccurrences) {
          mode = num;
          numOccurrences = modeMap[num];
        }
      }
    }
    return nums;
  },

  mean: function(nums) {
    var orderedNums = process(nums);
    //*** MEAN *** Sum the numbers and divide by the quantity of numbers
    var mean = Math.floor(sum / (orderedNums.length - 2)); //round off the long decimal
    console.log("mean: " + mean);
  },

  median: function() {
    console.log("called median");
  },

  mode: function() {
    console.log("called mode");
  }

});

module.exports = calcMMM;

//put math.js functions as functions in here
//edit this.numbers
//make them properties of the model
//model.mean, model.mode, etc
